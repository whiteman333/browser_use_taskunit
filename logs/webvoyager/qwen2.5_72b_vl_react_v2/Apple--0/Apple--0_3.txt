 SystemMessage 
You are a precise browser automation agent that interacts with websites through structured commands. Your role is to:
1. Analyze the provided webpage elements and structure
2. Use the given information to accomplish the ultimate task
3. Respond with valid JSON containing your next action sequence and state assessment


INPUT STRUCTURE:
1. Current URL: The webpage you're currently on
2. Available Tabs: List of open browser tabs
3. Interactive Elements: List in the format:
   index[:]<element_type>element_text</element_type>
   - index: Numeric identifier for interaction
   - element_type: HTML element type (button, input, etc.)
   - element_text: Visible text or element description

Example:
[33]<button>Submit Form</button>
[] Non-interactive text


Notes:
- Only elements with numeric indexes inside [] are interactive
- [] elements provide context but cannot be interacted with


IMPORTANT RULES:

1. RESPONSE FORMAT: You must ALWAYS respond with **valid JSON** in this exact format:
{
       
        "current_state": {
            "observation": "Observation of the current state",
            "thought": "Thought of the current state"
        },
         
        "action": [
            {
                "one_action_name": {
                // action-specific parameter
                }
            },
            // ... more actions in sequence
        ]
    }
    
2. ACTIONS: You can specify multiple actions in the list to be executed in sequence. But always specify only one action name per item.

   Common action sequences:
   - Form filling: [
       {"input_text": {"index": 1, "text": "username"}},
       {"input_text": {"index": 2, "text": "password"}},
       {"click_element": {"index": 3}}
     ]
   - Navigation and extraction: [
       {"open_tab": {}},
       {"go_to_url": {"url": "https://example.com"}},
       {"extract_content": ""}
     ]
   - Please generate valid double quotes and delimeters for your json output.

3. ELEMENT INTERACTION:
   - Only use indexes that exist in the provided element list
   - Each element has a unique index number (e.g., "[33]<button>")
   - Elements marked with "[]Non-interactive text" are non-interactive (for context only)

4. TASK COMPLETION:
   - Use the "done" action as the last action as soon as the ultimate task is complete.
   - Dont use "done" before you are done with everything the user asked you.
   - If you have to do something repeatedly for example the task says for "each", or "for all", or "x times", count always inside "memory" how many times you have done it and how many remain. Don't stop until you have completed like the task asked you. Only call done after the last step.
   - Don't hallucinate actions.
   - If the ultimate task requires specific information - make sure to include everything in the done function. This is what the user will see. Do not just say you are done, but include the requested information of the task.
   
5. Extraction:
- If your task is to find information or do research - call extract_content on the specific pages to get and store the information.
   - use maximum 1 actions per sequence

Functions:
Complete task with response to user: 
{done: {'text': {'type': 'string'}}}
Navigate to URL in the current tab: 
{go_to_url: {'url': {'type': 'string'}}}
Go back: 
{go_back: {}}
Click element: 
{click_element: {'index': {'type': 'integer'}, 'xpath': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None}}}
Input text into a input interactive element: 
{input_text: {'index': {'type': 'integer'}, 'text': {'type': 'string'}, 'xpath': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None}}}
Switch tab: 
{switch_tab: {'page_id': {'type': 'integer'}}}
Open url in new tab: 
{open_tab: {'url': {'type': 'string'}}}
Extract page content to retrieve specific information from the page, e.g. all company names, a specific description, all information about, links with companies in structured format or simply links: 
{extract_content: {'goal': {'type': 'string'}}}
Scroll down the page by pixel amount - if no amount is specified, scroll down one page: 
{scroll_down: {'amount': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None}}}
Scroll up the page by pixel amount - if no amount is specified, scroll up one page: 
{scroll_up: {'amount': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None}}}
Send strings of special keys like Backspace, Insert, PageDown, Delete, Enter, Shortcuts such as `Control+o`, `Control+Shift+T` are supported as well. This gets used in keyboard.press. Be aware of different operating systems and their shortcuts: 
{send_keys: {'keys': {'type': 'string'}}}
If you dont find something which you want to interact with, scroll to it: 
{scroll_to_text: {'text': {'type': 'string'}}}
Get all options from a native dropdown: 
{get_dropdown_options: {'index': {'type': 'integer'}}}
Select dropdown option for interactive element index by the text of the option you want to select: 
{select_dropdown_option: {'index': {'type': 'integer'}, 'text': {'type': 'string'}}}
Press Enter key. Useful for submitting search queries, completing forms, or triggering default actions on focused elements.: 
{press_enter: {}}

 HumanMessage 
Your ultimate task is: """Compare the prices of the latest models of MacBook Air available on Apple's website.""". If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.

 HumanMessage 
Example output:

 AIMessage 


 ToolMessage 
Browser started

 HumanMessage 
[Your task history memory starts here]

 HumanMessage 
Action result: üîó  Navigated to https://www.apple.com/

 AIMessage 
We are currently on Apple's homepage. There are visible interactive elements related to MacBooks, including a 'Learn more' link for the MacBook Air with M4 chip.

 ToolMessage 


 HumanMessage 
Action result: üñ±Ô∏è  Clicked button with index 15: Learn more

 HumanMessage 
[Task history memory ends here]
[Current state starts here]
The description of the current page (if exists):


You will see the following only once - if you need to remember it and you dont know it yet, write it down in the memory:
Current url: https://www.apple.com/macbook-air/
Available tabs:
[TabInfo(page_id=0, url='https://www.apple.com/macbook-air/', title='MacBook Air 13-inch and MacBook Air 15-inch - Apple')]
Interactive elements from current page:
[Start of page]
[0]<a aria-label="Apple">Apple</a>
[1]<a aria-label="Store">Store</a>
[2]<a aria-label="Mac">Mac</a>
[3]<a aria-label="iPad">iPad</a>
[4]<a aria-label="iPhone">iPhone</a>
[5]<a aria-label="Watch">Watch</a>
[6]<a aria-label="Vision">Vision</a>
[7]<a aria-label="AirPods">AirPods</a>
[8]<a aria-label="TV and Home">TV & Home</a>
[9]<a aria-label="Entertainment">Entertainment</a>
[10]<a aria-label="Accessories">Accessories</a>
[11]<a aria-label="Support">Support</a>
[12]<a role="button" aria-label="Search apple.com"></a>
[13]<a role="button" aria-label="Shopping Bag"></a>
[]MacBook Air
[]Overview
[]Tech Specs
[]Compare
[]Switch from PC to Mac
[]Buy
[]MacBook Air 13 and 15 inch
[]Buy MacBook¬†Air starting at $899 with education savings, get AirPods or an eligible accessory of your¬†choice.
[14]<a aria-label="Footnote Œî symbol">Œî</a>
[15]<a aria-label="Shop, Back to School Savings">Shop</a>
[20]<img alt=""></img>
[21]<img alt="Partially open 13-inch and 15-inch MacBook Air  ‚Äî one screen shows design work in progress, the other shows multitasking across email and spreadsheets"></img>
... 25547 pixels below - scroll or extract content to see more ...


Retrieved relevant pages to the task:

**Hints**: You should think first if you can use 'go_to_url' action to navigate quickly to the task-releated page retrieved above, and then use other interaction actions (click, input_text, etc.) to complete the task.

**Please generate valid double quotes and delimeters for your json output.**

 RESPONSE
{
  "action": [
    {
      "click_element": {
        "index": 16,
        "xpath": null
      }
    }
  ],
  "current_state": {
    "observation": "On the MacBook Air page, with a 'Buy' button available and pricing information presented.",
    "thought": "Since I'm already on the MacBook Air page, I should click the 'Buy' button to view the models and their respective prices."
  }
}