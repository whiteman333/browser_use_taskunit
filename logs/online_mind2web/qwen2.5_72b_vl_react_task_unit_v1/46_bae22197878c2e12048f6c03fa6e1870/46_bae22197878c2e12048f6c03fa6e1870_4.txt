 SystemMessage 
You are a precise browser automation agent that interacts with websites through structured commands. Your role is to:
    1. Analyze the provided webpage elements and structure
    2. Use the given information to accomplish the ultimate task
    3. Respond with valid JSON containing your next action sequence and state assessment

    
INPUT STRUCTURE:
1. Current URL: The webpage you're currently on
2. Available Tabs: List of open browser tabs
3. Interactive Elements: List in the format:
   index[:]<element_type>element_text</element_type>
   - index: Numeric identifier for interaction
   - element_type: HTML element type (button, input, etc.)
   - element_text: Visible text or element description

Example:
[33]<button>Submit Form</button>
[] Non-interactive text


Notes:
- Only elements with numeric indexes inside [] are interactive
- [] elements provide context but cannot be interacted with


    Here are some useful examples of the task units you can refer to:
    {
  "relevant_task_units": [
    {
      "id": "CLUSTER17_TU8",
      "name": "Find location-based information",
      "sub_actions": [
        "TYPE: Location",
        "SUBMIT search",
        "VIEW: Results"
      ],
      "reason": "This task unit is relevant as it involves searching for a location (vet) within a specified area (zip 75228)."
    }
  ]
}
    
    IMPORTANT RULES:
    
1. RESPONSE FORMAT: You must ALWAYS respond with **valid JSON** in this exact format:
{
       
        "current_state": {
            "observation": "Observation of the current state",
            "thought": "Thought of the current state"
        },
         
        "action": [
            {
                "one_action_name": {
                // action-specific parameter
                }
            },
            // ... more actions in sequence
        ]
    }
    
2. ACTIONS: You can specify multiple actions in the list to be executed in sequence. But always specify only one action name per item.

   Common action sequences:
   - Form filling: [
       {"input_text": {"index": 1, "text": "username"}},
       {"input_text": {"index": 2, "text": "password"}},
       {"click_element": {"index": 3}}
     ]
   - Navigation and extraction: [
       {"open_tab": {}},
       {"go_to_url": {"url": "https://example.com"}},
       {"extract_content": ""}
     ]
   - Please generate valid double quotes and delimeters for your json output.

3. ELEMENT INTERACTION:
   - Only use indexes that exist in the provided element list
   - Each element has a unique index number (e.g., "[33]<button>")
   - Elements marked with "[]Non-interactive text" are non-interactive (for context only)

4. TASK COMPLETION:
   - Use the "done" action as the last action as soon as the ultimate task is complete.
   - Dont use "done" before you are done with everything the user asked you.
   - If you have to do something repeatedly for example the task says for "each", or "for all", or "x times", count always inside "memory" how many times you have done it and how many remain. Don't stop until you have completed like the task asked you. Only call done after the last step.
   - Don't hallucinate actions.
   - If the ultimate task requires specific information - make sure to include everything in the done function. This is what the user will see. Do not just say you are done, but include the requested information of the task.
   - use maximum 1 actions per sequence

    Functions:
    Complete task with response to user: 
{done: {'text': {'type': 'string'}}}
Navigate to URL in the current tab: 
{go_to_url: {'url': {'type': 'string'}}}
Go back: 
{go_back: {}}
Click element: 
{click_element: {'index': {'type': 'integer'}, 'xpath': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None}}}
Input text into a input interactive element: 
{input_text: {'index': {'type': 'integer'}, 'text': {'type': 'string'}, 'xpath': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None}}}
Switch tab: 
{switch_tab: {'page_id': {'type': 'integer'}}}
Open url in new tab: 
{open_tab: {'url': {'type': 'string'}}}
Extract page content to retrieve specific information from the page, e.g. all company names, a specific description, all information about, links with companies in structured format or simply links: 
{extract_content: {'goal': {'type': 'string'}}}
Scroll down the page by pixel amount - if no amount is specified, scroll down one page: 
{scroll_down: {'amount': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None}}}
Scroll up the page by pixel amount - if no amount is specified, scroll up one page: 
{scroll_up: {'amount': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None}}}
Send strings of special keys like Backspace, Insert, PageDown, Delete, Enter, Shortcuts such as `Control+o`, `Control+Shift+T` are supported as well. This gets used in keyboard.press. Be aware of different operating systems and their shortcuts: 
{send_keys: {'keys': {'type': 'string'}}}
If you dont find something which you want to interact with, scroll to it: 
{scroll_to_text: {'text': {'type': 'string'}}}
Get all options from a native dropdown: 
{get_dropdown_options: {'index': {'type': 'integer'}}}
Select dropdown option for interactive element index by the text of the option you want to select: 
{select_dropdown_option: {'index': {'type': 'integer'}, 'text': {'type': 'string'}}}
Press Enter key. Useful for submitting search queries, completing forms, or triggering default actions on focused elements.: 
{press_enter: {}}

 HumanMessage 
Your ultimate task is: """Find the nearest vet within 50 miles of zip 75228.""". If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.

 HumanMessage 
Example output:

 AIMessage 


 ToolMessage 
Browser started

 HumanMessage 
[Your task history memory starts here]

 HumanMessage 
Action result: üîó  Navigated to https://www.akc.org/

 AIMessage 
The current page shows an Error 403 Forbidden message indicating that access to the requested resource is forbidden. There are no interactive elements available on this page.

 ToolMessage 


 HumanMessage 
Action result: üîó  Navigated to https://www.vetlocator.com/

 AIMessage 
I am viewing a webpage from vetlocator.com where I can perform various types of searches related to veterinary services. The immediate goal is to find a veterinarian within 50 miles of the zip code 75228.

 ToolMessage 


 HumanMessage 
Action result: ‚å®Ô∏è  Input 75228 into index 11

 HumanMessage 
[Task history memory ends here]
[Current state starts here]

You will see the following only once - if you need to remember it and you dont know it yet, write it down in the memory:
Current url: https://www.vetlocator.com/
Available tabs:
[TabInfo(page_id=0, url='https://www.vetlocator.com/', title='VetLocator.com - Vet Locator, Locate Vets, Veterinarians, Holistic vets, emergency pet hospitals')]
Interactive elements from current page:
[Start of page]
[]VetLocator
[0]<a >Ask a Pet Pro</a>
[1]<a >Resources</a>
[2]<a >Videos</a>
[3]<a >FAQ</a>
[4]<a >Newsletter</a>
[5]<a >Daily Paws</a>
[6]<a >Ask An Expert</a>
[7]<img ></img>
[]Find a Vet Near You!
[8]<img ></img>
[]Vet Quick Search
[]Search our entire directory for a Veterinarian near you.
[]Search within:
[9]<select name="radius"></select>
[10]<a >Need a Zip?</a>
[]of zipcode:
[11]<input type="text" name="zip" value=""></input>
[12]<input type="submit" value="Search"></input>
[13]<img ></img>
[]Pet Emergencies
[]Whether you have an emergency or just need information, you can find answers here.
[]Search within:
[14]<select name="radius"></select>
[15]<a >Need a Zip?</a>
[]of zipcode:
[16]<input type="text" name="zip" value=""></input>
[17]<input type="submit" value="Search"></input>
[18]<img ></img>
[]Holistic Vets
[]Our Holistic and Alternative directory includes veterinarians, chiropractors, dentists & other non-medical pros.
[]Search within:
[19]<select name="radius"></select>
[20]<a >Need a Zip?</a>
[]of zipcode:
[21]<input type="text" name="zip" value=""></input>
[22]<input type="submit" value="Search"></input>
[23]<img ></img>
[]House Call Vets
[]Our House Call Veterinary directory lists mobile Vets as well as Vet clinics & hospitals that make house calls.
[]Search within:
[24]<select name="radius"></select>
[25]<a >Need a Zip?</a>
[]of zipcode:
[26]<input type="text" name="zip" value=""></input>
[27]<input type="submit" value="Search"></input>
[28]<img ></img>
[]Horse Vets
[]Our Equine/Horse Vet directory includes Equine-only Specialists and Vets who treat horses & other animals.
[]Search within:
[29]<select name="radius"></select>
[30]<a >Need a Zip?</a>
[]of zipcode:
[31]<input type="text" name="zip" value=""></input>
[32]<input type="submit" value="Search"></input>
[33]<img ></img>
[]Other Pet Pros
[]Find non-medical pet professionals:
[34]<select name="service"></select>
[]Search within:
[35]<select name="radius"></select>
[36]<a >Need a Zip?</a>
[]of zipcode:
[37]<input type="text" name="zip" value=""></input>
[38]<input type="submit" value="Search"></input>
[39]<a >Home</a>
[40]<a >About us</a>
[41]<a >Get a Listing</a>
[42]<a >Advertise</a>
[43]<a >Log-In</a>
[44]<a >Contact</a>
[45]<a >Pet Emergencies</a>
[46]<a >¬©
2025 Pet Information Services, LLC</a>
[]|
[47]<a >Privacy Policy</a>
[]|
[48]<a >Disclaimer</a>
[]|
[49]<a >Site developed by Commlines Media</a>
[End of page]


**Please generate valid double quotes and delimeters for your json output.**

 RESPONSE
{
  "action": [
    {
      "click_element": {
        "index": 12
      }
    }
  ],
  "current_state": {
    "observation": "Zip code 75228 has been entered into the 'Vet Quick Search' input field.",
    "thought": "Next step is to submit the search query by clicking the 'Search' button."
  }
}